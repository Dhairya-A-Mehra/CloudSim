name: CI/CD Pipeline for CloudSim Simulation

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-simulate:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Create and configure output directory
        run: |
          mkdir -p $GITHUB_WORKSPACE/output
          chmod 777 $GITHUB_WORKSPACE/output
          ls -la $GITHUB_WORKSPACE/output  # Verify directory exists
          echo "Output directory created and configured."

      - name: Build and Install All Modules
        run: |
          mvn clean install -DskipTests
          echo "All modules built and installed successfully."

      - name: Build and Run Simulation
        id: simulation_results
        run: |
          mvn exec:java -pl modules/cloudsim-examples -Dexec.mainClass=org.cloudbus.cloudsim.examples.CloudSimPlusExample > $GITHUB_WORKSPACE/output/simulation_results.txt 2>&1
          if [ $? -ne 0 ]; then
            echo "Simulation failed!"
            exit 1
          fi
          cat $GITHUB_WORKSPACE/output/simulation_results.txt  # Preview contents immediately
          sanitized_results=$(cat $GITHUB_WORKSPACE/output/simulation_results.txt | tr '\n' ' ' | sed 's/::/-/g')
          echo "results=$sanitized_results" >> $GITHUB_OUTPUT

      - name: Display Simulation Results
        run: |
          if [ -f "$GITHUB_WORKSPACE/output/simulation_results.txt" ]; then
            cat $GITHUB_WORKSPACE/output/simulation_results.txt
          else
            echo "Simulation results file not found!"
          fi

      - name: Send Slack Notification
        uses: slackapi/slack-github-action@v1.23.0
        with:
          payload: |
            {
              "text": "Simulation completed successfully!",
              "attachments": [
                {
                  "title": "Results",
                  "text": "${{ steps.simulation_results.outputs.results }}"
                }
              ]
            }
          webhook-url: ${{ secrets.SLACK_WEBHOOK_URL }}